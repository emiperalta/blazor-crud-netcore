@page "/personform"
@page "/personform/{id:int}"

@using BlazorCrud.Data
@using System.Net.Http
@using System.Net.Http.Json

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Add new person</h3>

<EditForm Model="@person">
    <div class="container-fluid">
        <div class="form-group row mb-1">
            <label class="col-sm-3">First Name</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@person.FirstName"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Last Name</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@person.LastName"></InputText>
            </div>
        </div>

        <div class="form-group row mb-1">
            <div class="col-sm-9">
                <button class="btn btn-primary" @onclick="Save">Save</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; } //match the {id:int} parameter

    public string url = "/api/people";
    Person person = new Person();
    Response<object> res = new Response<object>();
    Response<Person> resPerson = new Response<Person>();

    private async Task Save()
    {
        if (id != 0)
        {
            var data = await Http.PutAsJsonAsync<Person>(url, person);
            res = data.Content.ReadFromJsonAsync<Response<object>>().Result;
        }
        else
        {
            var data = await Http.PostAsJsonAsync<Person>(url, person);
            res = data.Content.ReadFromJsonAsync<Response<object>>().Result;

        }

        NavigationManager.NavigateTo("/people");
    }

    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            resPerson = await Http.GetFromJsonAsync<Response<Person>>(url + "/" + id);
            person = resPerson.Data;
        }
    }
}
